{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","_ref","totalCounters","react_default","a","createElement","className","href","Counter","_this","this","getBadgeClasses","formatCount","onClick","props","onIncrement","counter","onDecrement","onDelete","id","classes","value","count","Component","Counters","_this$props","onReset","counters","map","c","components_counter","key","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleIncrement","toConsumableArray","i","indexOf","objectSpread","setState","handleDecrement","handleReset","handleDelete","counterId","filter","console","log","Fragment","navbar","length","components_counters","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.800fbe86.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst NavBar = ({ totalCounters }) => {\n  // object destructuring\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Cart{\" \"}\n          <span className=\"badge rounded-pill bg-secondary m-2\">\n            {totalCounters}\n          </span>\n        </a>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nclass Counter extends Component {\n  // componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    return (\n      <div>\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n        <button\n          onClick={() => this.props.onIncrement(this.props.counter)}\n          className=\"btn btn-secondary btn-sm ms-2\"\n        >\n          +\n        </button>\n        <button\n          onClick={() => this.props.onDecrement(this.props.counter)}\n          className=\"btn btn-secondary btn-sm m-1\"\n        >\n          -\n        </button>\n        <button\n          onClick={() => this.props.onDelete(this.props.counter.id)}\n          className=\"btn btn-danger btn-sm m-2\"\n        >\n          Delete\n        </button>\n      </div>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 bg-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { value: count } = this.props.counter;\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n","import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  render() {\n    const {\n      onReset,\n      counters,\n      onDelete,\n      onIncrement,\n      onDecrement,\n    } = this.props;\n    return (\n      <div>\n        {counters.map((c) => (\n          <Counter\n            key={c.id}\n            onDelete={onDelete}\n            onIncrement={onIncrement}\n            onDecrement={onDecrement}\n            counter={c}\n          />\n        ))}\n        <button\n          onClick={onReset}\n          className=\"btn btn-outline-primary btn-sm m-2\"\n        >\n          Reset\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport React, { Component } from \"react\";\n// import ReactDOM from \"react-dom\";\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  };\n\n  constructor() {\n    super();\n    console.log(\"App - Constructor\");\n  }\n\n  componentDidMount() {\n    console.log(\"App - Mounted\");\n  }\n\n  handleIncrement = (counter) => {\n    const counters = [...this.state.counters];\n    const i = counters.indexOf(counter);\n    counters[i] = { ...counter };\n    counters[i].value++;\n    this.setState({ counters });\n  };\n\n  handleDecrement = (counter) => {\n    const counters = [...this.state.counters];\n    const i = counters.indexOf(counter);\n    counters[i] = { ...counter };\n    counters[i].value--;\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleDelete = (counterId) => {\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters });\n  };\n  render() {\n    console.log(\"App - Rendered\");\n    return (\n      <React.Fragment>\n        <NavBar\n          totalCounters={this.state.counters.filter((c) => c.value > 0).length}\n        />\n        <main className=\"container\">\n          <Counters\n            counters={this.state.counters}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncrement}\n            onDecrement={this.handleDecrement}\n            onDelete={this.handleDelete}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from './App';\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}